!function(e){function t(s){if(i[s])return i[s].exports;var l=i[s]={exports:{},id:s,loaded:!1};return e[s].call(l.exports,l,l.exports,t),l.loaded=!0,l.exports}var i={};return t.m=e,t.c=i,t.p="",t(0)}([function(e,t){if("undefined"==typeof AFRAME)throw new Error("Component attempted to register before AFRAME was available.");AFRAME.registerComponent("selected",{schema:{color:{type:"color",default:"#FFF"},selected:{default:!0},toggleOnClick:{default:!0}},multiple:!1,init:function(){this.outlineMesh=null;var e=this.data,t=this.el;this.toggleSelected=function(){e.toggleOnClick&&(e.selected=!e.selected,t.setAttribute("selected",{selected:e.selected}))},this.el.addEventListener("click",this.toggleSelected)},update:function(e){if(this.outlineMesh&&!this.data.selected&&(this.el.object3D.remove(this.outlineMesh),this.outlineMesh=null),this.data.selected&&!this.outlineMesh){this.outlineMesh=this.el.object3D.children[0].clone();var t=new THREE.MeshBasicMaterial({color:this.data.color,side:THREE.BackSide});this.outlineMesh.traverse(function(e){e instanceof THREE.Mesh&&(e.material=t)}),this.outlineMesh.geometry.uvsNeedUpdate=!0,this.outlineMesh.needsUpdate=!0,this.outlineMesh.scale.multiplyScalar(1.05),this.el.object3D.add(this.outlineMesh)}else if(e.selected&&this.data.selected&&e.color!==this.data.color){var i=this.data;this.outlineMesh.traverse(function(e){e instanceof THREE.Mesh&&e.material.color.set(i.color)})}},remove:function(){this.el.object3D.remove(this.outlineMesh),this.outlineMesh=null,this.el.removeEventListener("click",this.toggleSelected)},pause:function(){},play:function(){}})}]);